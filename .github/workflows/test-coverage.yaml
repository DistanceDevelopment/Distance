on:
  push:
    branches:
      - coverage-fiddle
  pull_request:
    branches:
      - coverage-fiddle

name: test-coverage

jobs:
  test-coverage:
    runs-on: macOS-latest
#    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

#      - name: Install system dependencies
#        run: |
#          while read -r cmd
#          do
#            eval sudo $cmd
#          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr", dependencies = TRUE)
          remotes::install_github("DistanceDevelopment/mrds")
        shell: Rscript {0}

      - name: Test coverage
        run: |
          library(covr)
          con <- file("covlog")
          sink(con, append=TRUE)
          sink(con, append=TRUE, type="message")
          cov <- covr::package_coverage(quiet = FALSE, clean = FALSE)
          covr::codecov(cov, quiet=FALSE)
          sessionInfo()
          sink()
        shell: Rscript {0}

      - name: Show debug output
        if: always()
        run: more covlog
        shell: bash
